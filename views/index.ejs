<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <title>Document</title>
    <style>
        .container {
            display: flex;
            justify-content: space-between;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            background-color: blanchedalmond;
            height: 100vh;
        }

        #room-list {
            height: 100%;
            width: 100%;
            background-color: lightblue;
        }

        #room-list p {
            background-color: lightcoral;
        }
    </style>
</head>

<body>
    <div id="error-container-room"></div>
    <div class="container">
        <div class="room-container" id="room-container">
            <input id="addRoom" type="text">
            <button type="button" onclick="createRoom()">Create</button>
            <div id="room-list">
                <% rooms.forEach(element => { %>
                <p><%=element%></p>
                <% }); %>
            </div>
        </div>

        <div class="chat-container">
            <div id="room-name">Room</div>
            <div class="send-message-container">
                <input id="message" type="text">
                <button type="button" onclick="sendMessage()">Send</button>
            </div>
            <div id="message-container"></div>

        </div>
        <div id="online-users">Number of online users</div> <br>
        <ul id="list"></ul>
        <div>
            <h1 id="username"><%= name %></h1>
            <form action="/logout?_method=DELETE" method="POST">
                <button type="submit">Log Out</button>
                <button type="submit">Update</button>
            </form>
        </div>
        <div class="">
            <%= onlineUsersArray %>    
        </div>

    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        
        var socket = io();
        var users = [];

        // addEventlistener on room list
        document.getElementById('room-list').addEventListener('click', e => {
            let roomClicked = e.target.innerHTML;
            enterRoom(roomClicked);
        });


        socket.on('broadcastOnlineUsers', data => {
            document.getElementById('online-users').innerHTML = data.description;
        });

        socket.on('newmsg', data => {
            console.log('incoming');
            if (users) {
                document.getElementById('message-container').innerHTML += '<div>' + data.user + ': ' + data.msg + '</div>';
            }
        });

        socket.on('room-exists', data => {
            document.getElementById('error-container-room').innerHTML = data;
            setTimeout(() => {
                document.getElementById('error-container-room').innerHTML = '';
            }, 4000);
        });

        socket.on('room-set', data => {
            document.getElementById('room-list').innerHTML += '<p class="chatRoom">' + data + '</p>';
        });

        socket.on('connect-to-room', data => {
            document.getElementById('message-container').innerHTML += '<div>' + data + '</div>';
        });

        function sendMessage() {
            
            let msg = document.getElementById('message').value;
        let room = document.getElementById('room-name').innerHTML;
        let user = document.getElementById('username').innerHTML;

            if (msg) {
                socket.emit('msg', { message: msg, user: user, room: room });
                // Need to append the message here for the sender (`You: ${msg}`);
                document.getElementById('message-container').innerHTML += '<div>You: ' + msg + '</div>';
            }
        }

        function createRoom() {
            var newRoomName = document.getElementById('addRoom').value;
            if (newRoomName) {
                socket.emit('new-room', newRoomName);
            }
        }

        function enterRoom(room) {
            /////////////////////////////////////////////////////////////////////////
            let user = document.getElementById('username').innerHTML;
            document.getElementById('room-name').innerHTML = room;
            socket.emit('room-entered', {room:room, user:user});
        }

    </script>
</body>

</html>