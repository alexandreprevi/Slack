<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <link href="/stylesheets/style.css">
    <link rel="stylesheet" href="stylesheets/style.css">
    <title>Document</title>

    <style>
        .container {
            display: flex;
            justify-content: space-between;
        }

        .chat-container {
            display: flex;
            flex-direction: column;
            background-color: blanchedalmond;
            height: 100vh;
        }
    </style>
</head>

<body>
    <div class="slack">
        <div id="error-container-room"></div>
            <!-- <input type="text" name="username" placeholder="Type your name" id="userinput">
            <input type="submit" value="Login" id="usernameBtn"> -->

            <div class="sidebar">
                <div class="dm">
                        <h2 class="dm__heading">
                                <span>Direct messages <span class="dm__number">(29)</span>
                                </span>
                                <button class="ion-ios-plus-outline dm__add"></button>
                              </h2>
                <div id="private-chat"><i class="fas fa-plus-circle" id="new-private"></i> Private Message</div>
                <% for(let i = 0; i < users.length; i++){ %>
                <div><i class="fas fa-circle"></i> <%= users[i].username %></div>
                <% } %>
            </div>

                <div class="channels">
                <div class="room-container" id="room-container">
                    <input id="addRoom" type="text">
                    <button type="button" onclick="createRoom()">Create</button>
                    <div id="room-list">Room list</div>
                </div>
            </div>

            </div>

            <div class="main">
                <header class="main__header">Room</header>
                <div class="main__content">
                    <div class="main__container">
                <div class="send-message-container">
                    <input id="message" type="text">
                    <button type="button" onclick="sendMessage()">Send</button>
                </div>
                <div id="message-container"></div>
            </div>
            </div>
        </div>
            <div id="online-users">Number of online users</div> <br>
            <ul id="list"></ul>
        </div>

    </div>

    <script src="/socket.io/socket.io.js"></script>
    <!-- <script src="/socket.js"></script> -->
    <script>

        var socket = io();
        var user = [];


        // let userBtn = document.getElementById('usernameBtn');
        // userBtn.addEventListener('click', (event) => {
        //     console.log('working');
        //     let users = userinput.value;
        //     socket.emit('adduser', users);
        //     user.push(users);
        //     console.log(user);
        //     // $('#list').append($('<li></li><br>').text(user));

        // })

        socket.on('adduser', function (user) {
            console.log('ok');
            $('#list').append($('<li></li><br>').text(user));
        });


        // addEventlistener on room list
        document.getElementById('room-list').addEventListener('click', e => {
            let roomClicked = e.target.innerHTML;
            enterRoom(roomClicked);
        });


        socket.on('broadcastOnlineUsers', data => {
            document.getElementById('online-users').innerHTML = data.description;
        });

        socket.on('newmsg', data => {
            console.log('incoming');
            if (user) {
                document.getElementById('message-container').innerHTML += '<div>' + data.user + ': ' + data.msg + '</div>';
            }
        });

        socket.on('room-exists', data => {
            document.getElementById('error-container-room').innerHTML = data;
            setTimeout(() => {
                document.getElementById('error-container-room').innerHTML = '';
            }, 4000);
        });

        socket.on('room-set', data => {
            document.getElementById('room-list').innerHTML += '<p class="chatRoom">' + data + '</p>';
        });

        socket.on('connect-to-room', data => {
            document.getElementById('message-container').innerHTML += '<div>' + data + '</div>';
        });

        function sendMessage() {
            var msg = document.getElementById('message').value;
            var room = document.getElementById('room-name').innerHTML;
            if (msg) {
                socket.emit('msg', { message: msg, user: user, room: room });
                // Need to append the message here for the sender (`You: ${msg}`);
                document.getElementById('message-container').innerHTML += `You: ${msg}`;
            }
        }

        function createRoom() {
            var newRoomName = document.getElementById('addRoom').value;
            if (newRoomName) {
                socket.emit('new-room', newRoomName);
            }
        }

        function enterRoom(room) {
            document.getElementById('room-name').innerHTML = room;
            socket.emit('room-entered', room);
        }

    </script>
</body>

</html>